{"version":3,"sources":["components/profile/Profile.js","components/statistic/Statistic.js","components/friendListItem/friendListItem.js","components/friend-list/friend-list.js","components/transactions/Transactions.js","App.js","reportWebVitals.js","index.js"],"names":["Profile","name","tag","location","avatar","stats","className","src","alt","followers","views","likes","Statistics","map","stat","label","percentage","id","FriendListItem","isOnline","width","FriendList","friends","friend","TransactionHistory","items","item","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+1GAkCeA,EA/BC,SAAC,GAAsC,IAArCC,EAAoC,EAApCA,KAAKC,EAA+B,EAA/BA,IAAIC,EAA2B,EAA3BA,SAASC,EAAkB,EAAlBA,OAAOC,EAAW,EAAXA,MACvC,OACA,sBAAKC,UAAU,UAAf,UACI,sBAAKA,UAAU,cAAf,UACI,qBACAC,IAAKH,EACLI,IAAI,gHACJF,UAAU,WAEV,mBAAGA,UAAU,OAAb,SAAqBL,IACjB,mBAAGK,UAAU,MAAb,SAAoBJ,IACpB,mBAAGI,UAAU,WAAb,SAA0BH,OAGlC,qBAAIG,UAAU,QAAd,UACI,+BACI,sBAAMA,UAAU,QAAhB,uBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMI,eAEtC,+BACI,sBAAMH,UAAU,QAAhB,mBACA,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMK,WAEtC,+BACI,sBAAMJ,UAAU,QAAhB,mBACI,sBAAMA,UAAU,WAAhB,SAA4BD,EAAMM,kBCRvCC,G,MAjBI,SAAC,GAAc,IAAbP,EAAY,EAAZA,MAEjB,OACA,qBAAKC,UAAU,SAAf,SACI,oBAAIA,UAAU,YAAd,SACKD,EAAMQ,KAAI,SAACC,GACR,OAAO,qBAAkBR,UAAU,OAA5B,UACH,sBAAMA,UAAU,QAAhB,SAAyBQ,EAAKC,QAC9B,uBAAMT,UAAU,aAAhB,UAA8BQ,EAAKE,WAAnC,SAFYF,EAAKG,a,OCItBC,G,MAXQ,SAAC,GAAoC,IAAlCd,EAAiC,EAAjCA,OAAQH,EAAyB,EAAzBA,KAAMkB,EAAmB,EAAnBA,SAAUF,EAAS,EAATA,GAC9C,OACI,qBAAaX,UAAU,OAAvB,UACY,sBAAMA,UAAWa,EAAW,mBAAqB,uBACjD,qBAAKb,UAAU,SAASC,IAAKH,EAAQI,IAAKP,EAAMmB,MAAM,OACtD,mBAAGd,UAAU,OAAb,SAAqBL,MAHxBgB,KCgBFI,EAdI,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAElB,OAEI,oBAAIhB,UAAU,cAAd,SACKgB,EAAQT,KAAI,SAACU,GACV,OAAO,cAAC,EAAD,CAAgBnB,OAAQmB,EAAOnB,OAAQH,KAAMsB,EAAOtB,KAAMkB,SAAUI,EAAOJ,SAAUF,GAAIM,EAAON,W,cCgBxGO,G,MAzBY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC1B,OACI,wBAAOnB,UAAU,sBAAjB,UACI,gCACI,+BACI,sCACA,wCACA,+CAIR,gCAEQmB,EAAMZ,KAAI,SAACa,GACP,OAAO,+BACH,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,SACV,6BAAKF,EAAKG,aAHEH,EAAKT,cCkB9Ba,MArBf,WACE,OACE,sBAAKxB,UAAU,MAAf,UAEE,cAAC,EAAD,CACEL,KAAM8B,EAAK9B,KACXC,IAAK6B,EAAK7B,IACVC,SAAU4B,EAAK5B,SACfC,OAAQ2B,EAAK3B,OACbC,MAAO0B,EAAK1B,QAEd,cAAC,EAAD,CACEA,MAAO2B,IAET,cAAC,EAAD,CAAYV,QAASA,IAErB,cAAC,EAAD,CAAoBG,MAAOQ,QClBlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f04ff1b2.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\nimport './Profile.css'\n\nconst Profile = ({name,tag,location,avatar,stats}) => {\n    return (\n    <div className=\"profile\">\n        <div className=\"description\">\n            <img\n            src={avatar }\n            alt=\"Аватар пользователя\"\n            className=\"avatar\"\n            />\n            <p className=\"name\">{name}</p>\n                <p className=\"tag\">{tag }</p>\n                <p className=\"location\">{ location}</p>\n        </div>\n\n        <ul className=\"stats\">\n            <li>\n                <span className=\"label\">Followers</span>\n                <span className=\"quantity\">{stats.followers}</span>\n            </li>\n            <li>\n                <span className=\"label\">Views</span>\n                <span className=\"quantity\">{stats.views}</span>\n            </li>\n            <li>\n                <span className=\"label\">Likes</span>\n                    <span className=\"quantity\">{stats.likes}</span>\n            </li>\n        </ul>\n    </div>\n        )\n}\nexport default Profile\n\nProfile.propTypes = {\n    name: PropTypes.string,\n    tag: PropTypes.string,\n    location: PropTypes.string,\n    avatar: PropTypes.string,\n    stats: PropTypes.object,\n}","import PropTypes from 'prop-types'\nimport './Statistic.css'\n    \nconst Statistics = ({stats} ) => {\n    \n    return (\n    <div className=\"social\">\n        <ul className=\"stat-list\">\n            {stats.map((stat) => {\n                return <li key={stat.id} className=\"item\">\n                    <span className=\"label\">{stat.label}</span>\n                    <span className=\"percentage\">{stat.percentage}%</span>\n                </li>;\n                \n            })\n            }\n        </ul>\n    </div>\n    )\n}\nexport default Statistics;\nStatistics.propTypes = {\n    stats: PropTypes.array,\n}\n","import PropTypes from 'prop-types'\n\nconst FriendListItem = ({ avatar, name, isOnline, id }) => {\n    return (\n        <li key={id} className=\"item\">\n                    <span className={isOnline ? 'is-active status' : 'is-inactive status'}/>\n                    <img className=\"avatar\" src={avatar} alt={name} width=\"48\" />\n                    <p className=\"name\">{name}</p> \n                </li>\n    )\n    \n}\n\nexport default FriendListItem;\n\nFriendListItem.propTypes = {\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string,\n    isOnline: PropTypes.bool,\n    id:PropTypes.number,\n}","import './friend-list.css'\nimport PropTypes from 'prop-types'\nimport FriendListItem from '../friendListItem/friendListItem'\n\n\n\nconst FriendList = ({ friends }) => {\n    \n    return (\n \n        <ul className=\"friend-list\">\n            {friends.map((friend) => {\n                return <FriendListItem avatar={friend.avatar} name={friend.name} isOnline={friend.isOnline} id={friend.id}/>\n            })\n            }\n        </ul>\n\n    )\n}\n\nexport default FriendList;\n\nFriendList.propTypes = {\n    friends: PropTypes.array.isRequired,\n}\n\n","import './Transactions.css'\nimport PropTypes from 'prop-types'\n\nconst TransactionHistory = ({ items }) => {\n    return (\n        <table className=\"transaction-history\">\n            <thead>\n                <tr>\n                    <th>Type</th>\n                    <th>Amount</th>\n                    <th>Currency</th>\n                </tr>\n            </thead>\n\n            <tbody>\n                {\n                    items.map((item) => {\n                        return <tr key={item.id}>\n                            <th>{item.type}</th>\n                            <th>{item.amount}</th>\n                            <th>{item.currency}</th>\n                        </tr>\n                    })\n               }\n            </tbody>\n        </table>\n    )\n}\nexport default TransactionHistory\nTransactionHistory.propTypes = {\n    items: PropTypes.array.isRequired,\n}","import React from 'react';\n\nimport user from './data/user.json'\nimport Profile from './components/profile/Profile';\n\nimport Statistics from './components/statistic/Statistic';\nimport statisticalData from './data/statistical-data.json';\n\nimport FriendList from './components/friend-list/friend-list';\nimport friends from './data/friends.json'\n\nimport transactions from './data/transactions.json'\nimport TransactionHistory from './components/transactions/Transactions'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats} />\n      \n      <Statistics\n        stats={statisticalData} />\n      \n      <FriendList friends={friends} />\n\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}